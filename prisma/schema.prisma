generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

// Session model for Shopify OAuth sessions
model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

// ✅ Provider model (was "therapist")
model Provider {
  id   String @id @default(cuid())
  name String

  appointments   Appointment[]  @relation("ProviderAppointments")
  availabilities Availability[] // ✅ Reverse relation for Availability
}

// ✅ Bookable service
model Service {
  id        String  @id @default(cuid())
  name      String
  duration  Int
  price     Float?
  notes     String?
  variantId String?
}

// ✅ Weekly availability for a provider
model Availability {
  id         String @id @default(cuid())
  providerId String
  dayOfWeek  Int // 0 = Sunday, 6 = Saturday
  startTime  String // "10:00 AM"
  endTime    String // "4:00 PM"

  provider Provider @relation(fields: [providerId], references: [id])
}

// ✅ Appointment (links to Provider)
model Appointment {
  id         String   @id @default(cuid())
  shop       String
  date       DateTime
  time       String
  customer   String
  providerId String
  service    String?
  notes      String?
  createdAt  DateTime @default(now())

  provider Provider @relation("ProviderAppointments", fields: [providerId], references: [id])
}

// Item available for booking or purchase
model Item {
  id   String @id @default(cuid())
  name String
}

// Category grouping items or services
model Category {
  id   String @id @default(cuid())
  name String
}

// Optional modifier for an item or service
model Modifier {
  id   String @id @default(cuid())
  name String
}

// Discount applied to items or orders
model Discount {
  id   String @id @default(cuid())
  name String
}

// Option for customisation
model Option {
  id   String @id @default(cuid())
  name String
}

// Physical or virtual resource used in bookings
model Resource {
  id   String @id @default(cuid())
  name String
}

// Unit of measurement
model Unit {
  id   String @id @default(cuid())
  name String
}
